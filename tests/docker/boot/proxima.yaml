# Configuration file for the Proxima node
# For the first bootstrap node this must be true
# If false or absent, it will require at least one statically configured peer 
# and will not wait for syncing when starting sequencer  
bootstrap: true

# Peering configuration
peering:
  # libp2p host data:
  host:
    # host ID private key
    id_private_key: eb9132a44625fd29c56af8653d8b20ef1dc19cbd2d6aff0fbeae1f24ed624a88f3d797758dbf1800821c675370db2b0160bed9778332f2bcd155952fb0917799
    # host ID is derived from the host ID public key.
    id: 12D3KooWSEDuiViLCgy6RvzQWeziKk79aAMikGPFnMKjnLzv9TVi
    # port to connect from other peers
    port: 4000

  # YAML dictionary (map) of statically pre-configured peers. Also used in the peering boostrap phase by Kademlia DHT
  # It will be empty for the first bootstrap node in the network. In that case must be peering.host.bootstrap = true
  # Must be at least 1 static for non-bootstrap node
  # Each static peer is specified as a pair <name>: <multiaddr>, where:
  # -- <name> is unique mnemonic name used for convenience locally
  # -- <multiaddr> is the libp2p multi-address in the form '/ip4/<IPaddr ir URL>/<port>/tcp/p2p/<hostID>'
  # for more info see https://docs.libp2p.io/concepts/fundamentals/addressing/
  peers:
    # Example -> boot: /ip4/127.0.0.1/tcp/4000/p2p/12D3KooWL32QkXc8ZuraMJkLaoZjRXBkJVjRz7sxGWYwmzBFig3M

  # Maximum number of peers which may be connected to via the automatic peer discovery
  # max_dynamic_peers > 0 means automatic peer discovery (autopeering) is enabled, otherwise disabled
  max_dynamic_peers: 4

  # defines if local IPs are allowed to be used for autopeering.
  allow_local_ips: true

# Node's API config
api:
    # server port
  port: 8000

# logger config
# logger.previous can be 'erase' or 'save'
logger:
  level: info
  output: proxima.log
  # options: 'erase' (previous will be erased), 'save' (previous will be saved and then deleted)
  # Otherwise or when absent: log will be appended in the same existing file
  previous: erase
#  log_attacher_stats: true

# Other parameters used for tracing and debugging
# Prometheus metrics exposure
metrics:
  # expose Prometheus metrics yes/no
  enable: false
  port: 14000

# list of enabled trace tags.
# When enabled, it forces tracing of the specified module.
# It may be very verbose
# Search for available trace tags the code for "TraceTag"
trace_tags:
#  - autopeering
#  - inclusion
#  - backlog
#  - gossip
#  - pull_server
#  - txinput
#  - txStore
#  - global
#  - backlog
#  - propose-base
#  - pruner


# map of maps of sequencer configuration <local seq name>: <seq config>
# <local seq name> is stored into each sequencer transaction, so better keep it short 
# usually none or 1 sequencer is enabled for the node
# 0 enabled sequencers means node is a pure access node
# If sequencer is enabled, it is working as a separate and independent process inside the node
sequencer:
    name: "boot"
    # start sequencer yes/no
    enable: true
    # chain ID of the sequencer
    # chain ID 6393b6781206a652070e78d1391bc467e9d9704e9aa59ec7f7131f329d662dcc is
    # predefined chain ID of the genesis chain (the bootstrap sequencer)
    # Sequencer chain is created by 'proxi node mkchain' command
    # All chains controlled by the wallet can be displayed by 'proxi node chains'
    chain_id: 6393b6781206a652070e78d1391bc467e9d9704e9aa59ec7f7131f329d662dcc
    # sequencer chain controller's private key (hex-encoded)
    controller_key: cd9e2cbfccff43c55f6127869762814431203203f359e86b57d804ff50a1b36dc07e104fcbec1daf388ffe50a6fd3ddf006d1e24a384ff81277fee6eff808738
    # sequencer pace. Distance in ticks between two subsequent sequencer transactions
    # cannot be less than the sequencer pace value set by the ledger
    pace: 5
    # maximum tag-along inputs allowed in the sequencer transaction (maximum value is 254)
    max_tag_along_inputs: 100

